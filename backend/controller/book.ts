import { Router } from "express";
import {
  CreateBookBodySchema,
  CreateBookResponseType,
  DeleteBookResponseType,
  GetAllBooksByUserIdResponseType,
  GetBookResponse,
  UpdateBookBodySchema,
  UpdateBookResponseType,
} from "../../shared/apiTypes";

export const bookRouter = Router();

//CRUD Book

//Create a book
bookRouter.post("/create", (req, res) => {
  //this will take in some body that contains the title of the book
  //and sends it to the service
  const body = CreateBookBodySchema.parse(req.body);
  const result: CreateBookResponseType = {
    id: `"Created book: ${body.title}"`,
  };
  res.json(result);
});

//Get a book by id
bookRouter.get("/:id", (req, res) => {
  const id = req.params.id;
  const result: GetBookResponse = {
    id: id,
    title: "Finnegan's Wake",
    summary: "this will be generated by OpenAI",
  };
  res.json(result);
});

//Get all books by userId
bookRouter.get("/user/:userId", (req, res) => {
  const userId = req.params.userId;
  const result: GetAllBooksByUserIdResponseType = {
    books: [
      {
        id: "1",
        title: "Book Title 1",
        createdAt: new Date(),
        userId: userId,
        updatedAt: new Date(),
        summary: "Summary of Book Title 1",
      },
      {
        id: "2",
        title: "Book Title 2",
        createdAt: new Date(),
        userId: userId,
        updatedAt: new Date(),
        summary: "Summary of Book Title 2",
      },
    ],
  };
  res.json(result);
});

//Update a book by id
bookRouter.put("/update/:id", (req, res) => {
  const id = req.params.id;
  const body = UpdateBookBodySchema.parse(req.body);
  const result: UpdateBookResponseType = {
    id: id,
    title: body.title,
    updatedAt: new Date(),
  };
  console.log("result:", res.json(result));
});

//Delete book by id
bookRouter.delete("/delete/:id", (req, res) => {
  const id = req.params.id;
  const result: DeleteBookResponseType = {
    message: "Book successfully deleted",
  };
  res.json(result);
});
